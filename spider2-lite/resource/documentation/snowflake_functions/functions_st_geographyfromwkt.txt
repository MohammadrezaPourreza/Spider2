  ST_GEOGRAPHYFROMWKT  ¶

Parses a [ WKT (well-known text) ](https://en.wikipedia.org/wiki/Well-
known_text_representation_of_geometry) or [ EWKT (extended well-known text)
](../data-types-geospatial.html#label-a-note-on-ewkt-ewkb-handling) input and
returns a value of type [ GEOGRAPHY  ](../data-types-geospatial.html#label-
data-types-geography) .

Aliases:

    

ST_GEOGFROMWKT , ST_GEOGRAPHYFROMEWKT , ST_GEOGFROMEWKT , ST_GEOGRAPHYFROMTEXT
, ST_GEOGFROMTEXT

See also:

    

[ TO_GEOGRAPHY  ](to_geography)

##  Syntax  ¶

    
    
    ST_GEOGRAPHYFROMWKT( <varchar_expression> [ , <allow_invalid> ] )
    
    ST_GEOGFROMWKT( <varchar_expression> [ , <allow_invalid> ] )
    
    ST_GEOGRAPHYFROMEWKT( <varchar_expression> [ , <allow_invalid> ] )
    
    ST_GEOGFROMEWKT( <varchar_expression> [ , <allow_invalid> ] )
    
    ST_GEOGRAPHYFROMTEXT( <varchar_expression> [ , <allow_invalid> ] )
    
    ST_GEOGFROMTEXT( <varchar_expression> [ , <allow_invalid> ] )
    

Copy

##  Arguments  ¶

**Required:**

` _ varchar_expression  _ `

    

The argument must be a string expression in WKT or EWKT that represents a
valid geospatial object.

**Optional:**

` _ allow_invalid  _ `

    

If TRUE, specifies that the function should return a GEOGRAPHY or GEOMETRY
object, even when the input shape is invalid and cannot be repaired. For
details, refer to [ Specifying how invalid geospatial shapes are handled
](../data-types-geospatial.html#label-geospatial-invalid-shape-handling-intro)
.

##  Returns  ¶

The function returns a value of type [ GEOGRAPHY  ](../data-types-
geospatial.html#label-data-types-geography) .

##  Usage notes  ¶

  * Issues an error if the input cannot be parsed as WKT or EWKT. 

  * Issues an error if the input format is EWKT and the SRID  is not  4326\. See the [ note on EWKT and EWKB handling  ](../data-types-geospatial.html#label-a-note-on-ewkt-ewkb-handling) . 

  * For the coordinates in WKT, EWKT, and GeoJSON, longitude appears before latitude (e.g. ` POINT(  _ lon  _ _ lat  _ )  ` ). 

##  Examples  ¶

The following example returns the GEOGRAPHY object for a geospatial object
described in WKT format:

>
>     -- Set the output format to WKT
>     alter session set GEOGRAPHY_OUTPUT_FORMAT='WKT';
>  
>
> Copy
>  
>  
>     select ST_GEOGRAPHYFROMWKT('POINT(-122.35 37.55)');
>  
>
> Copy
>  
>  
>     +---------------------------------------------+
>     | ST_GEOGRAPHYFROMWKT('POINT(-122.35 37.55)') |
>     |---------------------------------------------|
>     | POINT(-122.35 37.55)                        |
>     +---------------------------------------------+
>  

The following example returns the GEOGRAPHY object for a geospatial object
with a Z coordinate described in WKT format:

>
>     -- Set the output format to WKT
>     alter session set GEOGRAPHY_OUTPUT_FORMAT='WKT';
>  
>
> Copy
>  
>  
>     select ST_GEOGRAPHYFROMWKT('POINTZ(-122.35 37.55 30)');
>  
>
> Copy
>  
>  
>     +-------------------------------------------------+
>     | ST_GEOGRAPHYFROMWKT('POINTZ(-122.35 37.55 30)') |
>     |-------------------------------------------------|
>     | POINTZ(-122.35 37.55 30)                        |
>     +-------------------------------------------------+
>  

The following example returns the GEOGRAPHY object for a geospatial object
described in EWKT format:

>
>     -- Set the output format to EWKT
>     alter session set GEOGRAPHY_OUTPUT_FORMAT='EWKT';
>  
>
> Copy
>  
>  
>     select ST_GEOGRAPHYFROMEWKT('SRID=4326;POINT(-122.35 37.55)');
>  
>
> Copy
>  
>  
>     +--------------------------------------------------------+
>     | ST_GEOGRAPHYFROMEWKT('SRID=4326;POINT(-122.35 37.55)') |
>     |--------------------------------------------------------|
>     | SRID=4326;POINT(-122.35 37.55)                         |
>     +--------------------------------------------------------+
>  

