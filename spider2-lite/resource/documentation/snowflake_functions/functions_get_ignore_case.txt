  GET_IGNORE_CASE  ¶

Extracts a field value from an object; returns NULL if either of the arguments
is NULL.

Note

This function is similar to [ GET  ](get) but applies case-insensitive
matching to field names.

See also:

    

[ GET  ](get)

##  Syntax  ¶

    
    
    

Copy

**OBJECT (or VARIANT containing an OBJECT)**

    
    
    GET_IGNORE_CASE( <object> , <field_name> )
    
    GET_IGNORE_CASE( <variant> , <field_name> )
    

Copy

**MAP**

    
    
    GET_IGNORE_CASE( <map> , <key> )
    

Copy

##  Arguments  ¶

` _ variant  _ `

    

An expression that evaluates to a [ VARIANT  ](../data-types-
semistructured.html#label-data-type-variant) that contains either an ARRAY or
an OBJECT.

` _ object  _ `

    

An expression that evaluates to an [ OBJECT  ](../data-types-
semistructured.html#label-data-type-object) that contains key-value pairs.

` _ field_name  _ `

    

An expression that evaluates to a VARCHAR. This specifies the key in a key-
value pair for which you want to retrieve the value.

` _ field_name  _ ` must not be an empty string.

If ` _ object  _ ` is a [ structured OBJECT  ](../data-types-structured) , you
must specify a constant for ` _ field_name  _ ` .

If ` _ object  _ ` does not contain the specified key:

  * If ` _ object  _ ` is a semi-structured OBJECT, the function returns NULL. 

  * If ` _ object  _ ` is a structured OBJECT, an error occurs. 

` _ map  _ `

    

An expression that evaluates to a [ MAP  ](../data-types-structured) .

` _ key  _ `

    

The key in a key-value pair for which you want to retrieve the value.

If ` _ map  _ ` does not contain the specified key, the function returns NULL.

##  Returns  ¶

  * The returned value is the specified element of the ARRAY, or the value that corresponds to the specified key of a key-value pair in the OBJECT. 

  * If the input object is a semi-structured OBJECT, ARRAY, or VARIANT, the function returns a VARIANT. The data type is VARIANT because: 

    * In an ARRAY, each element is of type VARIANT. 

    * In an OBJECT, the value in each key-value pair is of type VARIANT. 

  * If the input object is a [ structured OBJECT, structured ARRAY, or MAP  ](../data-types-structured) , the function returns a value of the type specified for the object. 

For example, if the type of the input object is ARRAY(NUMBER), the function
returns a NUMBER.

##  Usage notes  ¶

  * This function returns the first exact match it finds. If the function only finds ambiguous (case-insensitive) matches, it returns the value for one of the matches; however, no guarantee can be made on which ambiguous field name is matched first. 

  * GET_IGNORE_CASE is a binary function that can be called in the following ways: 

    * ` _ object  _ ` is an OBJECT value and ` _ field_name  _ ` is a string value, which can be a constant or an expression. 

This variation of GET_IGNORE_CASE extracts the value of the field with the
provided name from the object value.

    * ` _ v  _ ` is a VARIANT value and ` _ field_name  _ ` is a string value, which can be a constant or an expression. 

Works similarly to GET_IGNORE_CASE with ` _ object  _ ` , but additionally
checks that ` _ v  _ ` contains an object value (and returns NULL if ` _ v  _
` does not contain an object).

##  Examples  ¶

Extract a field value from an object. The function returns the value for the
exact match:

    
    
    SELECT GET_IGNORE_CASE(TO_OBJECT(PARSE_JSON('{"aa":1, "aA":2, "Aa":3, "AA":4}')),'aA') as output;
    
    +--------+
    | OUTPUT |
    |--------|
    | 2      |
    +--------+
    

Copy

Extract a field value from an object. The function cannot find an exact match
and so returns one of the ambiguous matches:

    
    
    SELECT GET_IGNORE_CASE(TO_OBJECT(PARSE_JSON('{"aa":1, "aA":2, "Aa":3}')),'AA') as output;
    
    +--------+
    | OUTPUT |
    |--------|
    | 3      |
    +--------+
    

Copy

For more detailed examples, see [ Querying Semi-structured Data  ](../../user-
guide/querying-semistructured) .

