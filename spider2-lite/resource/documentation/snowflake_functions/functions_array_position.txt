  ARRAY_POSITION  ¶

Returns the index of the first occurrence of an element in an array.

##  Syntax  ¶

    
    
    ARRAY_POSITION( <variant_expr> , <array> )
    

Copy

##  Arguments  ¶

` _ value_expr  _ `

    

Value to find in ` _ array  _ ` .

  * If ` _ array  _ ` is a [ semi-structured ARRAY  ](../data-types-semistructured.html#label-data-type-array) , ` _ value_expr  _ ` must evaluate to a [ VARIANT  ](../data-types-semistructured.html#label-data-type-variant) . 

  * If ` _ array  _ ` is a [ structured ARRAY  ](../data-types-structured) , ` _ value_expr  _ ` must evaluate to a type that is [ comparable  ](../data-types-structured.html#label-structured-types-compare-struct-struct) to the type of the ARRAY. 

` _ array  _ `

    

The ARRAY to search.

##  Returns  ¶

The function returns an INTEGER specifying the position of ` _ value_expr  _ `
in ` _ array  _ ` .

##  Usage notes  ¶

  * The return value is 0-based, not 1-based. In other words, if the ` _ value_expr  _ ` matches the first element in the array, this function returns 0, not 1. 

  * If the value is not contained in the ARRAY, the function returns NULL. 

  * If you specify NULL for ` _ value_expr  _ ` , the function returns the position of the first NULL in the array. 

##  Examples  ¶

The examples below show how to use this function:

>
>     SELECT ARRAY_POSITION('hello'::variant, array_construct('hello', 'hi'));
>     +------------------------------------------------------------------+
>     | ARRAY_POSITION('HELLO'::VARIANT, ARRAY_CONSTRUCT('HELLO', 'HI')) |
>     |------------------------------------------------------------------|
>     |                                                                0 |
>     +------------------------------------------------------------------+
>  
>
> Copy
>  
>  
>     SELECT ARRAY_POSITION('hi'::variant, array_construct('hello', 'hi'));
>     +---------------------------------------------------------------+
>     | ARRAY_POSITION('HI'::VARIANT, ARRAY_CONSTRUCT('HELLO', 'HI')) |
>     |---------------------------------------------------------------|
>     |                                                             1 |
>     +---------------------------------------------------------------+
>  
>
> Copy
>  
>  
>     SELECT ARRAY_POSITION('hello'::variant, array_construct('hola',
> 'bonjour'));
>     +----------------------------------------------------------------------+
>     | ARRAY_POSITION('HELLO'::VARIANT, ARRAY_CONSTRUCT('HOLA', 'BONJOUR')) |
>     |----------------------------------------------------------------------|
>     |                                                                 NULL |
>     +----------------------------------------------------------------------+
>  
>
> Copy

