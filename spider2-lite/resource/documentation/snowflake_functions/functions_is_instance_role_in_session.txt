  IS_INSTANCE_ROLE_IN_SESSION  ¶

Verifies whether the user’s active primary or secondary role hierarchy for the
session inherits the specified instance role.

See also:

    

[ Instance roles  ](../snowflake-db-classes.html#label-instance-roles) , [
IS_DATABASE_ROLE_IN_SESSION  ](is_database_role_in_session) , [
IS_ROLE_IN_SESSION  ](is_role_in_session)

##  Syntax  ¶

    
    
    IS_INSTANCE_ROLE_IN_SESSION( '<instance_name>' , '<instance_role_name>' )
    

Copy

##  Arguments  ¶

` '  _ instance_name  _ '  `

    

Specifies the name of the instance.

` '  _ instance_role_name  _ '  `

    

Specifies the name of the instance role.

##  Returns  ¶

  * ` TRUE  ` if the current user’s active [ primary role or secondary roles  ](../../user-guide/security-access-control-overview.html#label-access-control-role-enforcement) in the session inherit the specified instance role. 

When the ` DEFAULT_SECONDARY_ROLES  ` value is ` ALL  ` ,  any  role granted
to the user inherits the privileges of the specified instance role.

  * ` FALSE  ` if the specified instance role is not in the role hierarchy of the user’s current primary or secondary roles. 

##  Examples  ¶

Verify whether the current role for the session inherits the specified
instance role:

>
>     USE ROLE my_role;
>  
>     SELECT
> IS_INSTANCE_ROLE_IN_SESSION('my_db.my_schema.my_anomaly_detector', 'user');
>  
>
> Copy
>  
>  
>
> +----------------------------------------------------------------------------+
>     | IS_INSTANCE_ROLE_IN_SESSION('MY_DB.MY_SCHEMA.MY_ANOMALY_DETECTOR',
> 'USER') |
>
> +----------------------------------------------------------------------------+
>     | TRUE
> |
>
> +----------------------------------------------------------------------------+
>  

