  SYSTEM$GET_SERVICE_LOGS  ¶

[ ![Snowflake logo in black \(no text\)](../../_images/logo-snowflake-
black.png) ](../../_images/logo-snowflake-black.png) New feature

This feature is generally available to Snowflake accounts in AWS. [ Preview
support  ](../../release-notes/preview-features) is available to accounts in
Azure.

Currently, AWS PrivateLink and Azure PrivateLink are not supported.

Retrieves local logs from a [ Snowpark Container Services service
](../../developer-guide/snowpark-container-services/working-with-services)
container.

See also:

    

[ Accessing local container logs  ](../../developer-guide/snowpark-container-
services/working-with-services.html#label-snowpark-containers-working-with-
services-local-logs)

##  Syntax  ¶

    
    
    SYSTEM$GET_SERVICE_LOGS( <service_name>, <instance_id>, <container_name>
       [, <number_of_most_recent_lines> ] )
    

Copy

##  Arguments  ¶

**Required:**

` _ service_name  _ `

    

Service name.

` _ instance_id  _ `

    

ID of the service instance, starting with 0.

` _ container_name  _ `

    

Container name as specified in the service specification file.

**Optional:**

` _ number_of_most_recent_lines  _ `

    

Number of trailing log lines to retrieve.

Default: Up to 100 KB of the most recent log lines.

##  Returns  ¶

Returns a string consisting of newline-separated log entries from the
specified service container.

##  Usage notes  ¶

  * The current role must have the MONITOR privilege on the service to access the container logs. 

  * The function returns a container log as a string. You can use the [ SPLIT_TO_TABLE  ](split_to_table) function to convert the string into a table containing one row for each newline-separated entry. 

##  Examples  ¶

The following statement retrieves the last 10 log lines from the instance 0 of
the “echo_service” service that is running in the “echo” container:

    
    
    SELECT SYSTEM$GET_SERVICE_LOGS('TUTORIAL_DB.data_schema.echo_service', 0, 'echo', 10);
    

Copy

You can also follow [ Tutorial 1: Create a Snowpark Container Services Service
](../../developer-guide/snowpark-container-services/tutorials/tutorial-1) to
start a service and execute the preceding command to get the service log from
a container.

The function returns a string consisting of newline-separated log entries. You
can convert this string into a table using the [ SPLIT_TO_TABLE
](split_to_table) function and the TABLE() keyword (see [ Table functions
](../functions-table) ).

    
    
    SELECT value AS log_line
      FROM TABLE(
        SPLIT_TO_TABLE(SYSTEM$GET_SERVICE_LOGS('echo_service', 0, 'echo'), '\n')
      )
    

Copy

You can further apply a filter to retrieve only specific log entries. The
WHERE clause in the following SELECT statement uses the [ CONTAINS
](contains) function to retrieve only the log lines containing a specific date
string:

    
    
    SELECT value AS log_line
      FROM TABLE(
       SPLIT_TO_TABLE(SYSTEM$GET_SERVICE_LOGS('echo_service', '0', 'echo'), '\n')
      )
      WHERE (CONTAINS(log_line, '06/Jun/2023 02:44:'))
      ORDER BY log_line;
    

Copy

The following sample output shows three log entry rows retrieved:

    
    
    +-----------------------------------------------------------------------------------------------------+
    | LOG_LINE                                                                                            |
    |-----------------------------------------------------------------------------------------------------|
    | 10.16.9.193 - - [06/Jun/2023 02:44:04] "GET /healthcheck HTTP/1.1" 200 -                            |
    | 10.16.9.193 - - [06/Jun/2023 02:44:09] "GET /healthcheck HTTP/1.1" 200 -                            |
    | 10.16.9.193 - - [06/Jun/2023 02:44:14] "GET /healthcheck HTTP/1.1" 200 -                            |
    +-----------------------------------------------------------------------------------------------------+
    

