  SYSTEM$TASK_DEPENDENTS_ENABLE  ¶

Recursively resumes a specified task and all its dependent tasks. This
function allows the owner of a [ task graph  ](../../user-guide/tasks-
graphs.html#label-task-dag) (like the role with the OWNERSHIP privilege on the
tasks) to resume the tasks by executing a single SQL statement rather than
resuming each task individually (using [ ALTER TASK  ](../sql/alter-task) …
RESUME).

For more information about tasks, see [ Introduction to tasks  ](../../user-
guide/tasks-intro) .

##  Syntax  ¶

    
    
    SYSTEM$TASK_DEPENDENTS_ENABLE( '<task_name>' )
    

Copy

##  Arguments  ¶

` _ task_name  _ `

    

Name of a task in a simple task graph. It does not need to be a root task.

##  Usage notes  ¶

  * ` _ task_name  _ ` is a string so it must be enclosed in single quotes: 

    * Note that the entire name must be enclosed in single quotes, including the database and schema (if the name is fully-qualified), i.e. ` '<db>.<schema>.<task_name>'  ` . 

    * If the task name is case-sensitive or includes any special characters or spaces, double quotes are required to process the case/characters. The double quotes must be enclosed within the single quotes, i.e. ` '"<task_name>"'  ` . 

    * Accounts are currently limited to a maximum of 10000 resumed (i.e. in a ` Started  ` state) tasks. 

##  Examples  ¶

Resume a specified task and all its dependent tasks in a tree where the
specified task has a case-insensitive name:

>
>     SELECT SYSTEM$TASK_DEPENDENTS_ENABLE('mydb.myschema.mytask');
>  
>
> Copy

Resume a specified task and all its dependent tasks in a tree where the
specified task has a case-sensitive name:

>
>     SELECT SYSTEM$TASK_DEPENDENTS_ENABLE('mydb.myschema."myTask"');
>  
>
> Copy

