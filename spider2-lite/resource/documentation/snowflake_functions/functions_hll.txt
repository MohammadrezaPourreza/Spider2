  HLL  ¶

Uses HyperLogLog to return an approximation of the distinct cardinality of the
input (i.e. ` HLL(col1,  col2,  ...  )  ` returns an approximation of `
COUNT(DISTINCT  col1,  col2,  ...  )  ` ).

For more information about HyperLogLog, see [ Estimating the Number of
Distinct Values  ](../../user-guide/querying-approximate-cardinality) .

Aliases:

    

[ APPROX_COUNT_DISTINCT  ](approx_count_distinct) .

See also:

    

[ HLL_ACCUMULATE  ](hll_accumulate) , [ HLL_COMBINE  ](hll_combine) , [
HLL_ESTIMATE  ](hll_estimate)

##  Syntax  ¶

**Aggregate function**

    
    
    HLL( [ DISTINCT ] <expr1> [ , ... ] )
    
    HLL(*)
    

Copy

**Window function**

    
    
    HLL( [ DISTINCT ] <expr1> [ , ... ] ) OVER ( [ PARTITION BY <expr2> ] )
    
    HLL(*) OVER ( [ PARTITION BY <expr2> ] )
    

Copy

##  Arguments  ¶

` _ expr1  _ `

    

This is the expression for which you want to know the number of distinct
values.

` _ expr2  _ `

    

This is the optional expression used to group rows into partitions.

##  Returns  ¶

The data type of the returned value is INTEGER.

##  Usage notes  ¶

  * ` DISTINCT  ` can be included as an argument, but has no effect. 

  * For information about NULL values and aggregate functions, see [ Aggregate functions and NULL values  ](../functions-aggregation.html#label-aggregate-functions-and-null-values) . 

  * When used as a window function: 

>     * This function does not support:
>

>>       * ORDER BY sub-clause in the OVER() clause.

>>

>>       * Window frames.

##  Examples  ¶

This example shows how to use HLL and its alias APPROX_COUNT_DISTINCT. This
example calls both ` COUNT(DISTINCT  i)  ` and ` APPROX_COUNT_DISTINCT(i)  `
to emphasize that the results of these two functions do not always match
exactly.

The exact output from the following query might vary because
APPROX_COUNT_DISTINCT() returns an approximation, not an exact value.

>
>     SELECT COUNT(i), COUNT(DISTINCT i), APPROX_COUNT_DISTINCT(i), HLL(i)
>       FROM sequence_demo;
>  
>
> Copy

