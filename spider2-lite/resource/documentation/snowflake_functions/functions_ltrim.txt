  LTRIM  ¶

Removes leading characters, including whitespace, from a string.

Note

To remove characters in a string, you can use the [ REPLACE  ](replace)
function.

See also  :

    

[ RTRIM  ](rtrim) , [ TRIM  ](trim)

##  Syntax  ¶

    
    
    LTRIM( <expr> [, <characters> ] )
    

Copy

##  Arguments  ¶

` _ expr  _ `

    

The string expression to be trimmed.

` _ characters  _ `

    

One or more characters to remove from the left side of ` _ expr  _ ` .

The default value is ` '  '  ` (a single blank space character). If no
characters are specified, only blank spaces are removed.

##  Returns  ¶

This function returns a value of VARCHAR data type or NULL. If either argument
is NULL, returns NULL.

##  Usage notes  ¶

  * You can specify the characters in ` _ characters  _ ` in any order. 

  * A specification of ` '  '  ` in ` _ characters  _ ` does not remove other whitespace characters (such as tabulation characters, end-of-line characters, and so on). Explicitly specify these characters to remove them. 

  * When ` _ characters  _ ` is specified, you must explicitly specify the characters to remove whitespace. For example, ` '  $.'  ` removes all leading blank spaces, dollar signs, and periods from the input string. 

##  Collation details  ¶

[ Collation  ](../collation) is supported when the optional second argument is
omitted, or when it contains only whitespace.

The collation specification of the returned value is the same as the collation
specification of the first argument.

##  Examples  ¶

Remove leading ` 0  ` and ` #  ` characters from a string:

    
    
    SELECT LTRIM('#000000123', '0#');
    

Copy

    
    
    +---------------------------+
    | LTRIM('#000000123', '0#') |
    |---------------------------|
    | 123                       |
    +---------------------------+
    

The remaining examples use the following table data. Also, the queries enclose
the strings in ` > ` and ` < ` characters to help you visualize the
whitespace.

    
    
    CREATE OR REPLACE TABLE test_ltrim_function(column1 VARCHAR);
    
    INSERT INTO test_ltrim_function VALUES ('  #Leading Spaces');
    

Copy

Remove leading whitespace from a string. This example does not specify the
second ` _ characters  _ ` argument because the default is blank spaces.

    
    
    SELECT CONCAT('>', CONCAT(column1, '<')) AS original_value,
           CONCAT('>', CONCAT(LTRIM(column1), '<')) AS trimmed_value
      FROM test_ltrim_function;
    

Copy

    
    
    +---------------------+-------------------+
    | ORIGINAL_VALUE      | TRIMMED_VALUE     |
    |---------------------+-------------------|
    | >  #Leading Spaces< | >#Leading Spaces< |
    +---------------------+-------------------+
    

Remove leading whitespace and ` #  ` from a string. This example specifies the
second ` _ characters  _ ` argument because it removes other characters in
addition to blank spaces.

    
    
    SELECT CONCAT('>', CONCAT(column1, '<')) AS original_value,
           CONCAT('>', CONCAT(LTRIM(column1, ' #'), '<')) AS trimmed_value
      FROM test_ltrim_function;
    

Copy

    
    
    +---------------------+------------------+
    | ORIGINAL_VALUE      | TRIMMED_VALUE    |
    |---------------------+------------------|
    | >  #Leading Spaces< | >Leading Spaces< |
    +---------------------+------------------+
    

